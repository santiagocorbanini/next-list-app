import Head from "next/head";
import Navbar from "../component/Navbar";
import Todo from "../component/Todo";
import { table, minifyRecords } from "./api/utils/Airtable";
import { TodosContext } from "../contexts/TodosContext";
import { useEffect, useContext } from "react";

export default function Home({ initialTodos }) {
  const { todos, setTodos } = useContext(TodosContext);
  
  useEffect(() => {
    setTodos(initialTodos);
  }, []);

  const totalSteps = todos.length;
  var totalCompleted = 0;
  todos.map((todo) => {
    if(todo.fields.completed == true){
        totalCompleted = totalCompleted + 1;
    };
  })
  const percentage = ((totalCompleted * 100) / totalSteps );


  return (
    <div>
      <Head>
        <title>Next List App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <main>
        <h1>Todo App</h1>
        <div className="relative pt-1">
          <div className="flex mb-2 items-center justify-between">
            <div>
              <span className="text-xs font-semibold inline-block py-1 px-2 uppercase rounded-full text-pink-600 bg-pink-200">
                Task in progress
              </span>
            </div>
            <div className="text-right">
              <span className="text-xs font-semibold inline-block text-pink-600">
              {percentage + "%"}
              </span>
            </div>
          </div>
          <div className="overflow-hidden h-2 mb-4 text-xs flex rounded bg-pink-200">
            <div
              style={{ width: percentage + "%" }}
              className="shadow-none flex flex-col text-center whitespace-nowrap text-white justify-center bg-pink-500"
            ></div>
          </div>
        </div>

        <div className="shadow w-full bg-grey-light">
          <div
            style={{ width: percentage+"%" }}
            className="bg-blue-500 text-xs leading-none py-1 text-center text-white"
          >
            {percentage + "%"} Steps:{totalSteps} Completed:{totalCompleted} 
          </div>
        </div>

        <ul>
          {todos && todos.map((todo) => <Todo key={todo.id} todo={todo} />)}
        </ul>
      </main>
    </div>
  );
}

export async function getServerSideProps(context) {
  try {
    const todos = await table.select({}).firstPage();

    return {
      props: {
        initialTodos: minifyRecords(todos),
      },
    };
  } catch (err) {
    console.error(err);
    return {
      props: {
        err: "Something went wrong",
      },
    };
  }
}
